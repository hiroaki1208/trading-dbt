# PR時にdbtのCIを実行するGitHub Actionsのワークフローファイル
name: dbt CI/CD

on:
  pull_request:
    branches: [main, master]
    paths:
      - 'models/**'
      - 'macros/**'
      - 'tests/**'
      - 'seeds/**'
      - 'snapshots/**'
      - 'dbt_project.yml'
      - 'packages.yml'
      - 'profiles.yml'
  push:
    branches: [main, master]
    paths:
      - 'models/**'
      - 'macros/**'
      - 'tests/**'
      - 'seeds/**'
      - 'snapshots/**'
      - 'dbt_project.yml'
      - 'packages.yml'
      - 'profiles.yml'

jobs:
  dbt-ci:
    runs-on: ubuntu-latest
    
    env:
      DBT_PROFILES_DIR: .
      DBT_TARGET: ${{ github.event_name == 'push' && 'prod' || 'dev' }}  # PR時はdev、push時はprod
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Google Cloud credentials
        env:
          GOOGLE_CREDENTIALS_DEV: ${{ secrets.TERRAFORM_GCA_DEV }}
          GOOGLE_CREDENTIALS_PROD: ${{ secrets.TERRAFORM_GCA_PROD }}
        run: |
          if [ "$DBT_TARGET" = "prod" ]; then
            echo "$GOOGLE_CREDENTIALS_PROD" > keyfile.json
          else
            echo "$GOOGLE_CREDENTIALS_DEV" > keyfile.json
          fi
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/keyfile.json" >> $GITHUB_ENV

      - name: Install dbt packages
        run: dbt deps

      - name: Check dbt configuration
        run: dbt debug

      - name: Parse dbt project
        run: dbt parse

      - name: Run dbt models
        run: dbt run --target $DBT_TARGET

      - name: Run dbt tests
        run: dbt test --target $DBT_TARGET

      - name: Generate documentation
        run: dbt docs generate --target $DBT_TARGET

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dbt-docs
          path: target/